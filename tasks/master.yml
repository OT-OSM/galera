---
- name: Add config file for Debian
  template:
    src: master_galera.cnf.j2
    dest: /etc/mysql/conf.d/galera.cnf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "Debian"

- name: Add config file for RedHat
  template:
    src: master_my.cnf.j2
    dest: /etc/my.cnf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == "RedHat"

- name: Stop mysql on RedHat
  service:
    name: mysqld
    state: stopped
  when: ansible_os_family == "RedHat"

- name: Stop mysql on Debian
  service:
    name: mysql
    state: stopped
  when: ansible_os_family == "Debian"

- name: Bootstrap the cluster
  shell: /usr/bin/mysqld_bootstrap
  run_once: true

- name: Start Mysql server for RedHat
  service:
    name: mysqld
    state: started
  when: ansible_os_family == "RedHat"

- name: Start MySQL service for Debian
  service:
    name: mysql
    state: started
    enabled: yes
  when: ansible_os_family == "Debian"

- name: Set root Password
  mysql_user:
    name: root
    host: localhost
    password: '{{ mysql_root_password }}'
    state: present
  run_once: true

- name: create replication user and provide slave privileges
  mysql_user:
    name: "{{ replica_user }}"
    host: "{{ slave_ip }}"
    password: "{{ replica_pass }}"
    state: present
    priv: '*.*:REPLICATION SLAVE'
  run_once: true

- name: Dump database to mysqldump.sql
  shell: mysqldump -h localhost -u root  --all-databases --master-data > /tmp/masterdump.sql
  run_once: true

- name: copy mysqldump to localhost
  fetch:
    src: /tmp/masterdump.sql
    dest: /tmp/
    flat: yes
  run_once: true

- name: Create user for slave
  mysql_user:
    name: '{{ slave_user }}'
    host: '%'
    password: '{{ slave_passwd }}'
    state: present
    priv: '*.*:SELECT'
  run_once: true
